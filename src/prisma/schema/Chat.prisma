enum ChatType {
  DM
  GROUP
  CHANNEL
}

model Chat {
  id            Int               @id @default(autoincrement())
  type          ChatType
  messages      Message[]
  selfDestruct  Int?
  participants  ChatParticipant[]
  group         Group?
  channel       Channel?
}

model Group {
  chatId      Int       @id
  name        String
  picture     String?
  maxSize     Int       @default(1000)
  isPrivate   Boolean   @default(true)
  filtered    Boolean   @default(false)
  chat        Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Channel {
  chatId      Int        @id
  name        String
  picture     String?
  isPrivate   Boolean    @default(false)
  inviteLink  String     @default("")
  chat        Chat       @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model ChatParticipant {
  id                    Int               @id @default(autoincrement())
  userId                Int
  chatId                Int
  isArchived            Boolean           @default(false)
  unreadMessageCount    Int               @default(0)
  lastMessageId         Int?             
  isMuted               Boolean           @default(false)
  draftContent          String            @default("")
  draftTime             DateTime?
  draftParentMessageId  Int?
  draftParentContent    String?
  draftParentMedia      String?
  draftParentExtension  String?
  draftParentType       String?
  keyId                 Int?
  publicKey             PublicKey?        @relation(fields: [keyId], references: [id])
  parentMessage         Message?          @relation("DraftReplyToMessage", fields: [draftParentMessageId], references: [id])
  lastMessage           MessageStatus?    @relation("LastMessageForChatParticipant", fields: [lastMessageId], references: [id])
  chat                  Chat              @relation(fields: [chatId], references: [id])
  user                  User              @relation(fields: [userId], references: [id])
  groupParticipant      GroupParticipant?
  channelParticipant    ChannelParticipant?

  @@unique([chatId, userId])
}

model GroupParticipant {
  id          Int          @id @unique
  isAdmin     Boolean      @default(false)
  canDownload Boolean      @default(true)
  canDelete   Boolean      @default(true)
  canPost     Boolean      @default(true)
  canEdit     Boolean      @default(true)
  chatParticipant          ChatParticipant @relation(fields:[id],references: [id],onDelete: Cascade)
}

model ChannelParticipant {
  id              Int                @id @unique
  isAdmin         Boolean            @default(false)
  canDownload     Boolean            @default(true)
  canComment      Boolean            @default(true)
  chatParticipant ChatParticipant    @relation(fields: [id], references: [id],onDelete: Cascade)
}
