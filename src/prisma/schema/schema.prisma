generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "fullTextIndex", "fullTextSearch", "prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  name             String
  password         String            @db.VarChar(256)
  phoneNumber      String            @unique
  emailStatus      String            @default("Deactivated")
  messages         ChatMessage[]
  participants     ChatParticipant[]
  verificationCode Verification?
}

model Verification {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  userId    Int      @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chat {
  id            Int               @id @default(autoincrement())
  lastMessageId Int?              @unique
  lastMessage   ChatMessage?      @relation("LastMessageInChat", fields: [lastMessageId], references: [id])
  messages      ChatMessage[]
  participants  ChatParticipant[]
}

model ChatParticipant {
  id     Int  @id @default(autoincrement())
  chatId Int
  userId Int
  chat   Chat @relation(fields: [chatId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@unique([chatId, userId])
}

model ChatMessage {
  id               Int      @id @default(autoincrement())
  chatId           Int
  senderId         Int
  content          String
  createdAt        DateTime @default(now())
  lastMessageChats Chat?    @relation("LastMessageInChat")
  chat             Chat     @relation(fields: [chatId], references: [id])
  sender           User     @relation(fields: [senderId], references: [id])
}
